// src/pages/LessonsList.tsx
import React, { useEffect, useState } from "react";
import api, { deleteSubject } from "../api";
import {
  Card,
  CardActionArea,
  CardContent,
  Typography,
  Button,
  TextField,
  Box,
} from "@mui/material";
import { Grid } from "@mui/material"; // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º Grid2 –∏–∑ MUI v6
import { useNavigate } from "react-router-dom";
import type { Subject } from "../types/lessons";
import { useAuth } from "../auth/AuthContext";

const LessonsList: React.FC = () => {
  const [subjects, setSubjects] = useState<Subject[] | null>(null);
  const [error, setError] = useState<string | null>(null);
  const [newTitle, setNewTitle] = useState("");
  const navigate = useNavigate();
  const { user } = useAuth();

  const isTeacher = user?.role === "TEACHER" || user?.role === "ADMIN";
  const isStudent = user?.role === "STUDENT";

  const loadSubjects = () => {
    api
      .get<Subject[]>("/subjects")
      .then((res) => setSubjects(res.data))
      .catch(() => setError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã"));
  };

  useEffect(() => {
    loadSubjects();
  }, []);

  const handleAdd = () => {
    if (!newTitle.trim()) return;
    api
      .post("/subjects", { title: newTitle })
      .then(() => {
        setNewTitle("");
        loadSubjects();
      })
      .catch(() => setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞"));
  };

  if (error) return <p style={{ color: "red" }}>{error}</p>;
  if (subjects === null) return <p>–ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã‚Ä¶</p>;

  return (
    <div style={{ padding: 20 }}>
      <h1>–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤</h1>

      {/* === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π/–∞–¥–º–∏–Ω–æ–≤) === */}
      {isTeacher && (
        <Box sx={{ display: "flex", gap: 2, mb: 3 }}>
          <TextField
            label="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞"
            size="small"
            value={newTitle}
            onChange={(e) => setNewTitle(e.target.value)}
          />
          <Button variant="contained" onClick={handleAdd}>
            –î–æ–±–∞–≤–∏—Ç—å
          </Button>
        </Box>
      )}

      {subjects.length === 0 ? (
        <p>
          {isStudent
            ? "–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤."
            : "–ü—Ä–µ–¥–º–µ—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –°–æ–∑–¥–∞–π—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω."}
        </p>
      ) : (
        <Grid container spacing={2}>
          {subjects.map((s) => (
            <Grid key={s.id} size={{ xs: 12, sm: 6, md: 4 }}>
              <Card>
                <CardActionArea onClick={() => navigate(`/lessons/${s.id}`)}>
                  <CardContent>
                    <Typography variant="h6" sx={{ fontWeight: 600 }}>
                      {s.title}
                    </Typography>
                    <Typography variant="body2" color="text.secondary">
                      {s.moduleCount ?? 0} –º–æ–¥—É–ª–µ–π ‚Ä¢ {s.lessonCount ?? 0} —É—Ä–æ–∫–æ–≤
                    </Typography>
                  </CardContent>
                </CardActionArea>

                {/* === –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π/–∞–¥–º–∏–Ω–æ–≤) === */}
                {isTeacher && (
                  <Box
                    sx={{
                      display: "flex",
                      justifyContent: "flex-end",
                      p: 1,
                    }}
                  >
                    <Button
                      size="small"
                      color="error"
                      onClick={async () => {
                        if (confirm(`–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç "${s.title}"?`)) {
                          try {
                            await deleteSubject(s.id);
                            loadSubjects();
                          } catch {
                            alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞");
                          }
                        }
                      }}
                    >
                      üóë –£–¥–∞–ª–∏—Ç—å
                    </Button>
                  </Box>
                )}
              </Card>
            </Grid>
          ))}
        </Grid>
      )}
    </div>
  );
};

export default LessonsList;
